{"version":3,"sources":["components/TodoItem.js","components/TodosList.js","components/Header.js","components/InputTodo.js","components/TodoContainer.js","index.js"],"names":["TodoItem","this","props","todo","completed","id","title","className","type","checked","onChange","handleChangeProps","onClick","deleteTodoProps","style","fontStyle","color","opacity","textDecoration","React","Component","TodosList","todos","map","key","Header","padding","lineHeight","fontSize","marginBottom","InputTodo","state","e","setState","target","name","value","handleSubmit","preventDefault","addTodoProps","onSubmit","placeholder","TodoContainer","uuidv4","handleChange","delTodo","filter","addTodoItem","newTodo","ReactDOM","render","document","getElementById"],"mappings":"8MA8BeA,E,uKA3BD,IAAD,SAQ0BC,KAAKC,MAAMC,KAAnCC,EARF,EAQEA,UAAWC,EARb,EAQaA,GAAIC,EARjB,EAQiBA,MACtB,OACI,wBAAIC,UAAU,aACV,2BACIC,KAAK,WACLC,QAASL,EACTM,SAAU,kBAAM,EAAKR,MAAMS,kBAAkBN,MAEjD,4BAAQO,QAAS,kBAAM,EAAKV,MAAMW,gBAAgBR,KAAlD,UAGA,0BAAMS,MAAOV,EAlBE,CACnBW,UAAW,SACXC,MAAO,UACPC,QAAS,GACTC,eAAgB,gBAc8B,MACrCZ,Q,GArBEa,IAAMC,WCkBdC,E,uKAhBD,IAAD,OACL,OACI,6BACKpB,KAAKC,MAAMoB,MAAMC,KAAI,SAAApB,GAAI,OACtB,kBAAC,EAAD,CACIqB,IAAKrB,EAAKE,GACVF,KAAMA,EACNQ,kBAAmB,EAAKT,MAAMS,kBAC9BE,gBAAiB,EAAKX,MAAMW,0B,GAT5BM,IAAMC,WCYfK,EAbA,WAKX,OACI,4BAAQX,MALQ,CAChBY,QAAS,SACTC,WAAY,QAIR,wBAAIb,MAAO,CAACc,SAAU,OAAQC,aAAc,SAA5C,mBACA,uBAAGf,MAAO,CAACc,SAAU,SAArB,sD,OC4BGE,E,4MAnCXC,MAAQ,CACJzB,MAAO,I,EAGXI,SAAW,SAACsB,GACR,EAAKC,SAAL,eACKD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,S,EAIlCC,aAAe,SAACL,GACZA,EAAEM,iBACF,EAAKpC,MAAMqC,aAAa,EAAKR,MAAMzB,OACnC,EAAK2B,SAAS,CACV3B,MAAO,M,uDAKX,OACI,0BAAMkC,SAAUvC,KAAKoC,aAAc9B,UAAU,kBACzC,2BACIC,KAAK,OACLD,UAAU,aACV4B,KAAK,QACLM,YAAY,cACZL,MAAOnC,KAAK8B,MAAMzB,MAClBI,SAAUT,KAAKS,WAEnB,2BAAOF,KAAK,SAASD,UAAU,eAAe6B,MAAM,gB,GA9B5CjB,IAAMC,WC0EfsB,E,4MArEXX,MAAQ,CACJT,MAAO,CACH,CACIjB,GAAIsC,cACJrC,MAAO,gCACPF,WAAW,GAEf,CACIC,GAAIsC,cACJrC,MAAO,kCACPF,WAAW,GAEf,CACIC,GAAIsC,cACJrC,MAAO,wBACPF,WAAW,K,EAKvBwC,aAAe,SAACvC,GACZ,EAAK4B,SAAS,CACVX,MAAO,EAAKS,MAAMT,MAAMC,KAAI,SAAApB,GAIxB,OAHGA,EAAKE,KAAOA,IACXF,EAAKC,WAAaD,EAAKC,WAEpBD,Q,EAKnB0C,QAAU,SAACxC,GACP,EAAK4B,SAAS,CACVX,MAAM,YACC,EAAKS,MAAMT,MAAMwB,QAAO,SAAA3C,GACvB,OAAOA,EAAKE,KAAOA,S,EAMnC0C,YAAc,SAACzC,GACX,IAAM0C,EAAU,CACZ3C,GAAIsC,cACJrC,MAAOA,EACPF,WAAW,GAEf,EAAK6B,SAAS,CACVX,MAAM,GAAD,mBAAM,EAAKS,MAAMT,OAAjB,CAAwB0B,O,uDAKjC,OACI,yBAAKzC,UAAU,aACX,kBAAC,EAAD,MACA,kBAAC,EAAD,CACIgC,aAActC,KAAK8C,cAEvB,kBAAC,EAAD,CACIzB,MAAOrB,KAAK8B,MAAMT,MAClBX,kBAAmBV,KAAK2C,aACxB/B,gBAAiBZ,KAAK4C,e,GA/Dd1B,IAAMC,W,MCClC6B,IAASC,OAAO,kBAAC,EAAD,MAAmBC,SAASC,eAAe,U","file":"static/js/main.7b1370e4.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nclass TodoItem extends React.Component {\r\n    render() {\r\n        const completedStyle = {\r\n            fontStyle: \"italic\",\r\n            color: \"#d35e0f\",\r\n            opacity: 0.4,\r\n            textDecoration: \"line-through\"\r\n        }\r\n\r\n        const {completed, id, title} = this.props.todo\r\n        return (\r\n            <li className=\"todo-item\">\r\n                <input \r\n                    type=\"checkbox\" \r\n                    checked={completed} \r\n                    onChange={() => this.props.handleChangeProps(id)}\r\n                />\r\n                <button onClick={() => this.props.deleteTodoProps(id)}>\r\n                    Delete\r\n                </button>\r\n                <span style={completed ? completedStyle : null}>\r\n                    {title}\r\n                </span>\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoItem","import React from \"react\"\r\nimport TodoItem from \"./TodoItem\"\r\n\r\nclass TodosList extends React.Component {\r\n    render() {\r\n        return(\r\n            <div>\r\n                {this.props.todos.map(todo => (\r\n                    <TodoItem \r\n                        key={todo.id}\r\n                        todo={todo} \r\n                        handleChangeProps={this.props.handleChangeProps}\r\n                        deleteTodoProps={this.props.deleteTodoProps}\r\n                    />\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodosList ","import React from \"react\"\r\n\r\nconst Header = () => {\r\n    const headerStyle = {\r\n        padding: \"20px 0\",\r\n        lineHeight: \"2em\"\r\n    }\r\n    return (\r\n        <header style={headerStyle}>\r\n            <h1 style={{fontSize: \"25px\", marginBottom: \"15px\"}}>Simple Todo App</h1>\r\n            <p style={{fontSize: \"19px\"}}>Please add to-do item(s) through the input field</p>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from \"react\"\r\n\r\nclass InputTodo extends React.Component {\r\n    state = {\r\n        title: \"\"\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        this.props.addTodoProps(this.state.title)\r\n        this.setState({\r\n            title: \"\"\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <form onSubmit={this.handleSubmit} className=\"form-container\">\r\n                <input \r\n                    type=\"text\"\r\n                    className=\"input-text\"\r\n                    name=\"title\"\r\n                    placeholder=\"Add Todo...\"\r\n                    value={this.state.title}\r\n                    onChange={this.onChange}\r\n                />\r\n                <input type=\"submit\" className=\"input-submit\" value=\"Submit\" />\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputTodo","import React from \"react\"\r\nimport {v4 as uuidv4} from \"uuid\"\r\nimport TodosList from \"./TodosList\"\r\nimport Header from \"./Header\"\r\nimport InputTodo from \"./InputTodo\"\r\n\r\nclass TodoContainer extends React.Component {\r\n    state = {\r\n        todos: [\r\n            {\r\n                id: uuidv4(),\r\n                title: \"Setup development environment\",\r\n                completed: true\r\n            },\r\n            {\r\n                id: uuidv4(),\r\n                title: \"Develop website and add content\",\r\n                completed: false\r\n            },\r\n            {\r\n                id: uuidv4(),\r\n                title: \"Deploy to live server\",\r\n                completed: false\r\n            }\r\n        ]\r\n    }\r\n    \r\n    handleChange = (id) => {\r\n        this.setState({\r\n            todos: this.state.todos.map(todo => {\r\n                if(todo.id === id) {\r\n                    todo.completed = !todo.completed\r\n                }\r\n                return todo\r\n            })\r\n        })\r\n    }\r\n\r\n    delTodo = (id) => {\r\n        this.setState({\r\n            todos: [\r\n                ...this.state.todos.filter(todo => {\r\n                    return todo.id !== id\r\n                })\r\n            ]\r\n        })\r\n    }\r\n\r\n    addTodoItem = (title) => {\r\n        const newTodo = {\r\n            id: uuidv4(),\r\n            title: title,\r\n            completed: false\r\n        }\r\n        this.setState({\r\n            todos: [...this.state.todos, newTodo]\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <Header />\r\n                <InputTodo\r\n                    addTodoProps={this.addTodoItem}\r\n                />\r\n                <TodosList \r\n                    todos={this.state.todos} \r\n                    handleChangeProps={this.handleChange}\r\n                    deleteTodoProps={this.delTodo}\r\n                />                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoContainer","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\n// component files\r\nimport TodoContainer from \"./components/TodoContainer\"\r\nimport \"./App.css\"\r\n\r\n\r\nReactDOM.render(<TodoContainer />, document.getElementById(\"root\"))"],"sourceRoot":""}